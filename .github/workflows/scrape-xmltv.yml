name: Scrape XML

on:
  workflow_dispatch:
    inputs:
      force_release:
        default: "false"
        required: false
        description: "Force a release at the end"
      days:
        default: "1"
        required: false
        description: "Number of days to scrape"
  push:
    paths:
      - '.github/workflows/scrape-xmltv.yml'
      - 'scripts/**'
  schedule:
    - cron: '0 3 * * *'  # every day at 3am

env:
  HOME: /config

jobs:
  scrape:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        grabber: [ uk_tvguide, na_dtv ]
    container:
      image: ghcr.io/${{ github.repository }}
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_PAT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: XMLTV cache
        id: cache-xmltv
        uses: actions/cache@v2
        with:
          path: /config/.xmltv/cache
          key: ${{ runner.os }}-xmltv-cache

      - name: Scrape guide
        run: ./scripts/run-scraper.sh ${{ matrix.grabber }} ${{ github.event_name }} ${{ github.event.inputs.days }}

      - id: name
        name: Determine tag name
        run: |
          if [[ ${{ github.event_name }} == "schedule" ]]; then
            echo "::set-output name=name::$(date '+%Y%m%d')"
          else
            echo "::set-output name=name::$(date '+%Y%m%d%H%M')"
          fi

      - uses: ncipollo/release-action@v1
        if: github.event_name == 'schedule' || github.event.inputs.force_release == 'true'
        with:
          allowUpdates: true
          prerelease: ${{ github.event_name != 'schedule' }}
          artifacts: "xmltv/${{ matrix.grabber }}.xml"
          artifactContentType: application/xml
          body: "${{ steps.name.outputs.name }}"
          name: "${{ steps.name.outputs.name }}"
          tag: "${{ steps.name.outputs.name }}"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup older releases
        if: github.event_name == 'schedule' || github.event.inputs.force_release == 'true'
        uses: dev-drprasad/delete-older-releases@v0.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          keep_latest: 7
          delete_tags: true
